source('~/Dropbox/1- Program/PAFit/PAFit/tests/tests.R', echo=TRUE)
source('~/Dropbox/1- Program/PAFit/PAFit/tests/tests.R', echo=TRUE)
source('~/Dropbox/1- Program/PAFit/PAFit/tests/tests.R', echo=TRUE)
stats$node_degree
stats$T
source('~/Dropbox/1- Program/PAFit/PAFit/tests/tests.R', echo=TRUE)
stats$T
dim(stats$node_degree)
source('~/Dropbox/1- Program/PAFit/PAFit/tests/tests.R', echo=TRUE)
source('~/Dropbox/1- Program/PAFit/PAFit/tests/tests.R', echo=TRUE)
source('~/Dropbox/1- Program/PAFit/PAFit/tests/tests.R', echo=TRUE)
source('~/Dropbox/1- Program/PAFit/PAFit/tests/tests.R', echo=TRUE)
system.time(source('~/Dropbox/1- Program/PAFit/PAFit/tests/tests.R', echo=TRUE))
system.time(source('~/Dropbox/1- Program/PAFit/PAFit/tests/tests.R', echo=TRUE))
library(PAFit)
library(PAFit)
help(PAFit)
install.packages("Rcppp")
install.packages("Rcpp")
library(Rcpp)
help(Rcpp)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
source('~/Dropbox/1- Program/PAFit/PAFit/tests/tests.R', echo=TRUE)
library(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
library(PAFit)
help(PAFit)
UCIrvine.data
UCIrvine.data[1:3,]
library(PAFit)
UCIrvine.data[1:3,]
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
install.packages("fanc")
library(fanc)
help(fanc)
library(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
help(PAFit)
library("PAFit")
stats <- GetStatistics(UCIrvine.data, deg_threshold = 5)
result <- PAFit(stats, only_PA = TRUE)
result$alpha
#Number of bins is G = 100
stats2 <- GetStatistics(UCIrvine.data, deg_threshold = 5, Binning = TRUE, G = 100)
result3 <- PAFit(stats2,only_PA = TRUE)
result3$alpha
install.packages("~/Downloads/Rcpp_0.11.4.tar.gz", repos = NULL, type = "source")
library(Rcpp)
library(Rcpp)
help(Rcpp)
source('~/Dropbox/1- Program/PAFit/PAFit/tests/tests.R', echo=TRUE)
k <- 1:100
k^1.2
y <- k^1.2
plot(k,y,log = "xy")
plot(k,y,log = "y")
y <- 3*log(k)^1.2
plot(k,y,log = "xy")
plot(k,y,log = "y")
result$var_A
result$var_logA
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
showNonASCII(readLines(paste0(pkg, "/man/XXX.Rd")))
library(devtools)
library(tools)
install.packages(devtools)
install.packages("devtools")
library(PAFit)
help(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
r
R
library(PAFit)
help(PAFit)
library(PAFit)
version()
version
vigneette()
vignette()
library(PAFit)
help(PAFit)
view.vig
library(PAFit)
help(PAFit)
library(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
help(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
c(1,1) & c(1,0)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
install.packages("hexbinplot")
install.packages("hexbin")
library(hexbin)
help(hexbin)
install("Rcpp")
install.packages("Rcpp")
install.packages(Rcpp)
install.packages("Rcpp"")
install.packages("Rcpp")
install.packages("R.rsp")
install.package("R.rsp")
install.packages("R.rsp")
install.packages("Rcpp")
library(Rcpp)
help("Rcpp")
install.packages("~/Dropbox/1- Program/PAFit/PAFit_0.7.5.tar.gz", repos = NULL, type = "source")
?Sys.setlocale.
?Sys.setlocale
Sys.getlocale(category = "LC_ALL")
LC_COLLATE=
LC_CTYPE=
LC_MESSAGES=
LC_MONETARY=
R> Sys.setenv(LANG="en_US.UTF-8")
R> Sys.setenv(LC_ALL="en_US.UTF-8")
Sys.setenv(LANG="en_US.UTF-8")
Sys.setenv(LC_ALL="en_US.UTF-8")
library(PAFit)
help("PAFit")
install.packages("RColorBrewer")
install.packages("devtool")
install.packages("devtools")
install.packages("~/Downloads/PAFit_0.7.6.zip", repos = NULL, type = "win.binary")
install.package(VGAM)
install.packages(VGAM)
install.packages("VGAM")
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
data  <- GenerateNet(N = 1000, m = 5, shape = 5, alpha = 1)
stats <- GetStatistics(data)
stats <- GetStatistics(data$graph)
result <- PAFit(stats,mode_f = "Log_linear", s = 5)
result$alpha
library(PAFit)
result <- PAFit(stats,mode_f = "Log_linear", s = 5)
result$PA_offset
library(PAFit)
data  <- GenerateNet(N = 1000, m = 5, shape = 5, alpha = 0.7)
stats <- GetStatistics(data$graph)
result <- PAFit(stats,mode_f = "Log_linear", s = 5)
result$alpha
result$PA_offset
library(PAFit)
result <- PAFit(stats,mode_f = "Log_linear", s = 5, debug = TRUE)
library(PAFit)
result <- PAFit(stats,mode_f = "Log_linear", s = 5, debug = TRUE)
library(PAFit)
result <- PAFit(stats,mode_f = "Log_linear", s = 5, debug = TRUE)
library(PAFit)
result <- PAFit(stats,mode_f = "Log_linear", s = 5, debug = TRUE)
library(PAFit)
result <- PAFit(stats,mode_f = "Log_linear", s = 5, debug = TRUE)
library(PAFit)
result <- PAFit(stats,mode_f = "Log_linear", s = 5, debug = TRUE)
library(PAFit)
result <- PAFit(stats,mode_f = "Log_linear", s = 5, debug = TRUE)
library(PAFit)
library(PAFit)
result <- PAFit(stats,mode_f = "Log_linear", s = 5, debug = TRUE)
result$PA_offset
result$alpha
data  <- GenerateNet(N = 1000, m = 30, num_seed = 20, shape = 5, alpha = 0.7)
stats <- GetStatistics(data$graph)
result <- PAFit(stats,mode_f = "Log_linear", s = 5, debug = TRUE)
result$alpha
result$PA_offset
stats <- GetStatistics(data$graph, Binning = FALSE)
result <- PAFit(stats,mode_f = "Log_linear", s = 5, debug = TRUE)
result$PA_offset
result$alpha
result$theta
stats <- GetStatistics(data$graph, Binning = TRUE)
result <- PAFit(stats,mode_f = "Log_linear", s = 5, debug = TRUE)
library(PAFit)
stats <- GetStatistics(data$graph, Binning = FALSE)
result <- PAFit(stats,mode_f = "Log_linear", s = 5, debug = TRUE)
result$alpha
result$theta
library(PAFit)
result <- PAFit(stats,mode_f = "Log_linear", s = 5, debug = TRUE, stop_cond = 10^-4)
result$theta
library(PAFit)
result$PA_offset
result$alpha
library(PAFit)
result <- PAFit(stats,mode_f = "Log_linear", s = 5, debug = TRUE, stop_cond = 10^-6)
result$alpha
result$PA_offset
library(PAFit)
library(PAFit)
library(PAFit)
a <- c(1,3)
a[NA] <- 1
a
a["NA"] <- 1
a
install.packages(R.rsp)
install.packages("R.rsp")
library(PAFit)
library(PAFit)
library("PAFit")
data   <- GenerateNet(N = 100,m = 1,mode = 1, alpha = 1, shape = 5, rate = 5)
stats  <- GetStatistics(data$graph,deg_thresh = 1, Binning = TRUE, G = 50)
result <- PAFit(stats,stop_cond = 10^-3)
#plot A
plot(result,stats,plot = "A")
#plot f
plot(result,stats,plot = "f")
#plot true_f
plot(result,stats,data$fitness, plot = "true_f")
(col2rgb(col_interval)
)
col2rgb(col_interval)
col_interval <- "lightsteelblue"
col2rgb(col_interval)
my_col <- as.vector(col2rgb(col_interval))
my_col
library(PAFit)
library("PAFit")
data   <- GenerateNet(N = 100,m = 1,mode = 1, alpha = 1, shape = 5, rate = 5)
stats  <- GetStatistics(data$graph,deg_thresh = 1, Binning = TRUE, G = 50)
result <- PAFit(stats,stop_cond = 10^-3)
#plot A
plot(result,stats,plot = "A")
#plot f
plot(result,stats,plot = "f")
#plot true_f
plot(result,stats,data$fitness, plot = "true_f")
result$lower_f
stats$f_position
stats$increase
library(PAFit)
library("PAFit")
data   <- GenerateNet(N = 100,m = 1,mode = 1, alpha = 1, shape = 5, rate = 5)
stats  <- GetStatistics(data$graph,deg_thresh = 1, Binning = TRUE, G = 50)
result <- PAFit(stats,stop_cond = 10^-3)
#plot A
plot(result,stats,plot = "A")
#plot f
plot(result,stats,plot = "f")
#plot true_f
plot(result,stats,data$fitness, plot = "true_f")
result$lower_f
stats$f_position
library(PAFit)
library("PAFit")
data   <- GenerateNet(N = 100,m = 1,mode = 1, alpha = 1, shape = 5, rate = 5)
stats  <- GetStatistics(data$graph,deg_thresh = 1, Binning = TRUE, G = 50)
result <- PAFit(stats,stop_cond = 10^-3)
#plot A
plot(result,stats,plot = "A")
#plot f
plot(result,stats,plot = "f")
#plot true_f
plot(result,stats,data$fitness, plot = "true_f")
library(PAFit)
library("PAFit")
data   <- GenerateNet(N = 100,m = 1,mode = 1, alpha = 1, shape = 5, rate = 5)
stats  <- GetStatistics(data$graph,deg_thresh = 1, Binning = TRUE, G = 50)
result <- PAFit(stats,stop_cond = 10^-3)
#plot A
plot(result,stats,plot = "A")
#plot f
plot(result,stats,plot = "f")
#plot true_f
plot(result,stats,data$fitness, plot = "true_f")
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
print(center_k[non_zero_theta[ok_log]])
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
a <- matrix(1:4, nrow = 2, ncol = 2)
a
a [1,2]
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
library(PAFit)
