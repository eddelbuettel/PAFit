{
    "collab_server" : "",
    "contents" : "// Generated by using Rcpp::compileAttributes() -> do not edit by hand\n// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393\n\n#include <Rcpp.h>\n\nusing namespace Rcpp;\n\n// normalized_constant\nint normalized_constant(NumericVector& norm, const NumericMatrix& degree, const NumericVector& theta, const NumericVector& f, const NumericMatrix& offset_tk, const double& offset);\nRcppExport SEXP PAFit_normalized_constant(SEXP normSEXP, SEXP degreeSEXP, SEXP thetaSEXP, SEXP fSEXP, SEXP offset_tkSEXP, SEXP offsetSEXP) {\nBEGIN_RCPP\n    Rcpp::RObject rcpp_result_gen;\n    Rcpp::RNGScope rcpp_rngScope_gen;\n    Rcpp::traits::input_parameter< NumericVector& >::type norm(normSEXP);\n    Rcpp::traits::input_parameter< const NumericMatrix& >::type degree(degreeSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type theta(thetaSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type f(fSEXP);\n    Rcpp::traits::input_parameter< const NumericMatrix& >::type offset_tk(offset_tkSEXP);\n    Rcpp::traits::input_parameter< const double& >::type offset(offsetSEXP);\n    rcpp_result_gen = Rcpp::wrap(normalized_constant(norm, degree, theta, f, offset_tk, offset));\n    return rcpp_result_gen;\nEND_RCPP\n}\n// normalized_constant_alpha\nint normalized_constant_alpha(NumericVector& norm, const double& alpha, const double& PA_offset, const NumericMatrix& degree, const NumericVector& theta, const NumericVector& f, const NumericMatrix& offset_tk, const double& offset);\nRcppExport SEXP PAFit_normalized_constant_alpha(SEXP normSEXP, SEXP alphaSEXP, SEXP PA_offsetSEXP, SEXP degreeSEXP, SEXP thetaSEXP, SEXP fSEXP, SEXP offset_tkSEXP, SEXP offsetSEXP) {\nBEGIN_RCPP\n    Rcpp::RObject rcpp_result_gen;\n    Rcpp::RNGScope rcpp_rngScope_gen;\n    Rcpp::traits::input_parameter< NumericVector& >::type norm(normSEXP);\n    Rcpp::traits::input_parameter< const double& >::type alpha(alphaSEXP);\n    Rcpp::traits::input_parameter< const double& >::type PA_offset(PA_offsetSEXP);\n    Rcpp::traits::input_parameter< const NumericMatrix& >::type degree(degreeSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type theta(thetaSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type f(fSEXP);\n    Rcpp::traits::input_parameter< const NumericMatrix& >::type offset_tk(offset_tkSEXP);\n    Rcpp::traits::input_parameter< const double& >::type offset(offsetSEXP);\n    rcpp_result_gen = Rcpp::wrap(normalized_constant_alpha(norm, alpha, PA_offset, degree, theta, f, offset_tk, offset));\n    return rcpp_result_gen;\nEND_RCPP\n}\n// get_stats\nint get_stats(CharacterVector& time_stamp, CharacterVector& unique_stamp, const NumericVector& in_node, const NumericVector& out_node, const NumericVector& all_node, const NumericVector& ok_node, const NumericVector& bin_vector, const long max_node_id, const int undirected, const int only_PA, CharacterVector& time_vector, NumericVector& Sum_m_k, NumericMatrix& n_tk, NumericVector& m_tk, NumericVector& m_t, NumericMatrix& offset_tk, NumericVector& z_j, NumericMatrix& node_degree, NumericMatrix& offset_m_tk, const int only_true_deg);\nRcppExport SEXP PAFit_get_stats(SEXP time_stampSEXP, SEXP unique_stampSEXP, SEXP in_nodeSEXP, SEXP out_nodeSEXP, SEXP all_nodeSEXP, SEXP ok_nodeSEXP, SEXP bin_vectorSEXP, SEXP max_node_idSEXP, SEXP undirectedSEXP, SEXP only_PASEXP, SEXP time_vectorSEXP, SEXP Sum_m_kSEXP, SEXP n_tkSEXP, SEXP m_tkSEXP, SEXP m_tSEXP, SEXP offset_tkSEXP, SEXP z_jSEXP, SEXP node_degreeSEXP, SEXP offset_m_tkSEXP, SEXP only_true_degSEXP) {\nBEGIN_RCPP\n    Rcpp::RObject rcpp_result_gen;\n    Rcpp::RNGScope rcpp_rngScope_gen;\n    Rcpp::traits::input_parameter< CharacterVector& >::type time_stamp(time_stampSEXP);\n    Rcpp::traits::input_parameter< CharacterVector& >::type unique_stamp(unique_stampSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type in_node(in_nodeSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type out_node(out_nodeSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type all_node(all_nodeSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type ok_node(ok_nodeSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type bin_vector(bin_vectorSEXP);\n    Rcpp::traits::input_parameter< const long >::type max_node_id(max_node_idSEXP);\n    Rcpp::traits::input_parameter< const int >::type undirected(undirectedSEXP);\n    Rcpp::traits::input_parameter< const int >::type only_PA(only_PASEXP);\n    Rcpp::traits::input_parameter< CharacterVector& >::type time_vector(time_vectorSEXP);\n    Rcpp::traits::input_parameter< NumericVector& >::type Sum_m_k(Sum_m_kSEXP);\n    Rcpp::traits::input_parameter< NumericMatrix& >::type n_tk(n_tkSEXP);\n    Rcpp::traits::input_parameter< NumericVector& >::type m_tk(m_tkSEXP);\n    Rcpp::traits::input_parameter< NumericVector& >::type m_t(m_tSEXP);\n    Rcpp::traits::input_parameter< NumericMatrix& >::type offset_tk(offset_tkSEXP);\n    Rcpp::traits::input_parameter< NumericVector& >::type z_j(z_jSEXP);\n    Rcpp::traits::input_parameter< NumericMatrix& >::type node_degree(node_degreeSEXP);\n    Rcpp::traits::input_parameter< NumericMatrix& >::type offset_m_tk(offset_m_tkSEXP);\n    Rcpp::traits::input_parameter< const int >::type only_true_deg(only_true_degSEXP);\n    rcpp_result_gen = Rcpp::wrap(get_stats(time_stamp, unique_stamp, in_node, out_node, all_node, ok_node, bin_vector, max_node_id, undirected, only_PA, time_vector, Sum_m_k, n_tk, m_tk, m_t, offset_tk, z_j, node_degree, offset_m_tk, only_true_deg));\n    return rcpp_result_gen;\nEND_RCPP\n}\n// update_f\nint update_f(NumericVector& f, const NumericVector& non_zero_f, const NumericMatrix& degree, const NumericVector& theta, const NumericVector& z_j, const NumericVector& normalized_const, const NumericVector& m_t, const double shape, const double rate, const double offset);\nRcppExport SEXP PAFit_update_f(SEXP fSEXP, SEXP non_zero_fSEXP, SEXP degreeSEXP, SEXP thetaSEXP, SEXP z_jSEXP, SEXP normalized_constSEXP, SEXP m_tSEXP, SEXP shapeSEXP, SEXP rateSEXP, SEXP offsetSEXP) {\nBEGIN_RCPP\n    Rcpp::RObject rcpp_result_gen;\n    Rcpp::RNGScope rcpp_rngScope_gen;\n    Rcpp::traits::input_parameter< NumericVector& >::type f(fSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type non_zero_f(non_zero_fSEXP);\n    Rcpp::traits::input_parameter< const NumericMatrix& >::type degree(degreeSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type theta(thetaSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type z_j(z_jSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type normalized_const(normalized_constSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type m_t(m_tSEXP);\n    Rcpp::traits::input_parameter< const double >::type shape(shapeSEXP);\n    Rcpp::traits::input_parameter< const double >::type rate(rateSEXP);\n    Rcpp::traits::input_parameter< const double >::type offset(offsetSEXP);\n    rcpp_result_gen = Rcpp::wrap(update_f(f, non_zero_f, degree, theta, z_j, normalized_const, m_t, shape, rate, offset));\n    return rcpp_result_gen;\nEND_RCPP\n}\n// update_offset\ndouble update_offset(const NumericMatrix& offset_n_tk, const NumericMatrix& offset_m_tk, const NumericVector& theta, const NumericVector& normalized_const, const NumericVector& m_t, const double shape, const double rate);\nRcppExport SEXP PAFit_update_offset(SEXP offset_n_tkSEXP, SEXP offset_m_tkSEXP, SEXP thetaSEXP, SEXP normalized_constSEXP, SEXP m_tSEXP, SEXP shapeSEXP, SEXP rateSEXP) {\nBEGIN_RCPP\n    Rcpp::RObject rcpp_result_gen;\n    Rcpp::RNGScope rcpp_rngScope_gen;\n    Rcpp::traits::input_parameter< const NumericMatrix& >::type offset_n_tk(offset_n_tkSEXP);\n    Rcpp::traits::input_parameter< const NumericMatrix& >::type offset_m_tk(offset_m_tkSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type theta(thetaSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type normalized_const(normalized_constSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type m_t(m_tSEXP);\n    Rcpp::traits::input_parameter< const double >::type shape(shapeSEXP);\n    Rcpp::traits::input_parameter< const double >::type rate(rateSEXP);\n    rcpp_result_gen = Rcpp::wrap(update_offset(offset_n_tk, offset_m_tk, theta, normalized_const, m_t, shape, rate));\n    return rcpp_result_gen;\nEND_RCPP\n}\n// update_offset_alpha\ndouble update_offset_alpha(const double& alpha, const NumericMatrix& offset_n_tk, const NumericMatrix& offset_m_tk, const NumericVector& theta, const NumericVector& normalized_const, const NumericVector& m_t, const double shape, const double rate);\nRcppExport SEXP PAFit_update_offset_alpha(SEXP alphaSEXP, SEXP offset_n_tkSEXP, SEXP offset_m_tkSEXP, SEXP thetaSEXP, SEXP normalized_constSEXP, SEXP m_tSEXP, SEXP shapeSEXP, SEXP rateSEXP) {\nBEGIN_RCPP\n    Rcpp::RObject rcpp_result_gen;\n    Rcpp::RNGScope rcpp_rngScope_gen;\n    Rcpp::traits::input_parameter< const double& >::type alpha(alphaSEXP);\n    Rcpp::traits::input_parameter< const NumericMatrix& >::type offset_n_tk(offset_n_tkSEXP);\n    Rcpp::traits::input_parameter< const NumericMatrix& >::type offset_m_tk(offset_m_tkSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type theta(thetaSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type normalized_const(normalized_constSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type m_t(m_tSEXP);\n    Rcpp::traits::input_parameter< const double >::type shape(shapeSEXP);\n    Rcpp::traits::input_parameter< const double >::type rate(rateSEXP);\n    rcpp_result_gen = Rcpp::wrap(update_offset_alpha(alpha, offset_n_tk, offset_m_tk, theta, normalized_const, m_t, shape, rate));\n    return rcpp_result_gen;\nEND_RCPP\n}\n// update_f_alpha\nint update_f_alpha(NumericVector& f, const NumericVector& non_zero_f, const double& alpha, const double& PA_offset, const NumericMatrix& degree, const NumericVector& theta, const NumericVector& z_j, const NumericVector& normalized_const, const NumericVector& m_t, const double shape, const double rate);\nRcppExport SEXP PAFit_update_f_alpha(SEXP fSEXP, SEXP non_zero_fSEXP, SEXP alphaSEXP, SEXP PA_offsetSEXP, SEXP degreeSEXP, SEXP thetaSEXP, SEXP z_jSEXP, SEXP normalized_constSEXP, SEXP m_tSEXP, SEXP shapeSEXP, SEXP rateSEXP) {\nBEGIN_RCPP\n    Rcpp::RObject rcpp_result_gen;\n    Rcpp::RNGScope rcpp_rngScope_gen;\n    Rcpp::traits::input_parameter< NumericVector& >::type f(fSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type non_zero_f(non_zero_fSEXP);\n    Rcpp::traits::input_parameter< const double& >::type alpha(alphaSEXP);\n    Rcpp::traits::input_parameter< const double& >::type PA_offset(PA_offsetSEXP);\n    Rcpp::traits::input_parameter< const NumericMatrix& >::type degree(degreeSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type theta(thetaSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type z_j(z_jSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type normalized_const(normalized_constSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type m_t(m_tSEXP);\n    Rcpp::traits::input_parameter< const double >::type shape(shapeSEXP);\n    Rcpp::traits::input_parameter< const double >::type rate(rateSEXP);\n    rcpp_result_gen = Rcpp::wrap(update_f_alpha(f, non_zero_f, alpha, PA_offset, degree, theta, z_j, normalized_const, m_t, shape, rate));\n    return rcpp_result_gen;\nEND_RCPP\n}\n// update_alpha\ndouble update_alpha(const NumericVector& non_zero_theta, const NumericVector& norm, const NumericVector& f, const double& PA_offset, const NumericVector& theta, const NumericMatrix& degree, const NumericVector& m_t, const NumericVector& Sum_m_k, const NumericMatrix& offset_tk, const double& offset);\nRcppExport SEXP PAFit_update_alpha(SEXP non_zero_thetaSEXP, SEXP normSEXP, SEXP fSEXP, SEXP PA_offsetSEXP, SEXP thetaSEXP, SEXP degreeSEXP, SEXP m_tSEXP, SEXP Sum_m_kSEXP, SEXP offset_tkSEXP, SEXP offsetSEXP) {\nBEGIN_RCPP\n    Rcpp::RObject rcpp_result_gen;\n    Rcpp::RNGScope rcpp_rngScope_gen;\n    Rcpp::traits::input_parameter< const NumericVector& >::type non_zero_theta(non_zero_thetaSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type norm(normSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type f(fSEXP);\n    Rcpp::traits::input_parameter< const double& >::type PA_offset(PA_offsetSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type theta(thetaSEXP);\n    Rcpp::traits::input_parameter< const NumericMatrix& >::type degree(degreeSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type m_t(m_tSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type Sum_m_k(Sum_m_kSEXP);\n    Rcpp::traits::input_parameter< const NumericMatrix& >::type offset_tk(offset_tkSEXP);\n    Rcpp::traits::input_parameter< const double& >::type offset(offsetSEXP);\n    rcpp_result_gen = Rcpp::wrap(update_alpha(non_zero_theta, norm, f, PA_offset, theta, degree, m_t, Sum_m_k, offset_tk, offset));\n    return rcpp_result_gen;\nEND_RCPP\n}\n// update_PA_offset\ndouble update_PA_offset(const NumericVector& norm, const NumericVector& f, const NumericMatrix& degree, const NumericVector& m_t, const NumericVector& Sum_m_k, const NumericMatrix& offset_tk);\nRcppExport SEXP PAFit_update_PA_offset(SEXP normSEXP, SEXP fSEXP, SEXP degreeSEXP, SEXP m_tSEXP, SEXP Sum_m_kSEXP, SEXP offset_tkSEXP) {\nBEGIN_RCPP\n    Rcpp::RObject rcpp_result_gen;\n    Rcpp::RNGScope rcpp_rngScope_gen;\n    Rcpp::traits::input_parameter< const NumericVector& >::type norm(normSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type f(fSEXP);\n    Rcpp::traits::input_parameter< const NumericMatrix& >::type degree(degreeSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type m_t(m_tSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type Sum_m_k(Sum_m_kSEXP);\n    Rcpp::traits::input_parameter< const NumericMatrix& >::type offset_tk(offset_tkSEXP);\n    rcpp_result_gen = Rcpp::wrap(update_PA_offset(norm, f, degree, m_t, Sum_m_k, offset_tk));\n    return rcpp_result_gen;\nEND_RCPP\n}\n// coeff_theta\nNumericVector coeff_theta(const NumericMatrix& degree, const NumericVector& f, const NumericVector& normalized_const, const NumericVector& m_t, const int length_theta);\nRcppExport SEXP PAFit_coeff_theta(SEXP degreeSEXP, SEXP fSEXP, SEXP normalized_constSEXP, SEXP m_tSEXP, SEXP length_thetaSEXP) {\nBEGIN_RCPP\n    Rcpp::RObject rcpp_result_gen;\n    Rcpp::RNGScope rcpp_rngScope_gen;\n    Rcpp::traits::input_parameter< const NumericMatrix& >::type degree(degreeSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type f(fSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type normalized_const(normalized_constSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type m_t(m_tSEXP);\n    Rcpp::traits::input_parameter< const int >::type length_theta(length_thetaSEXP);\n    rcpp_result_gen = Rcpp::wrap(coeff_theta(degree, f, normalized_const, m_t, length_theta));\n    return rcpp_result_gen;\nEND_RCPP\n}\n// coeff_var\nNumericVector coeff_var(const NumericMatrix& degree, const NumericVector& f, const NumericVector& normalized_const, const NumericVector& m_t, const NumericMatrix& offset, const int length_theta);\nRcppExport SEXP PAFit_coeff_var(SEXP degreeSEXP, SEXP fSEXP, SEXP normalized_constSEXP, SEXP m_tSEXP, SEXP offsetSEXP, SEXP length_thetaSEXP) {\nBEGIN_RCPP\n    Rcpp::RObject rcpp_result_gen;\n    Rcpp::RNGScope rcpp_rngScope_gen;\n    Rcpp::traits::input_parameter< const NumericMatrix& >::type degree(degreeSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type f(fSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type normalized_const(normalized_constSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type m_t(m_tSEXP);\n    Rcpp::traits::input_parameter< const NumericMatrix& >::type offset(offsetSEXP);\n    Rcpp::traits::input_parameter< const int >::type length_theta(length_thetaSEXP);\n    rcpp_result_gen = Rcpp::wrap(coeff_var(degree, f, normalized_const, m_t, offset, length_theta));\n    return rcpp_result_gen;\nEND_RCPP\n}\n// cal_var_f\nint cal_var_f(NumericVector& cov_f, const NumericVector& non_zero_f, const NumericMatrix& degree, const NumericVector& theta, const NumericVector& f, const NumericVector& z_j, const NumericVector& normalized_const, const NumericVector& m_t, const double shape);\nRcppExport SEXP PAFit_cal_var_f(SEXP cov_fSEXP, SEXP non_zero_fSEXP, SEXP degreeSEXP, SEXP thetaSEXP, SEXP fSEXP, SEXP z_jSEXP, SEXP normalized_constSEXP, SEXP m_tSEXP, SEXP shapeSEXP) {\nBEGIN_RCPP\n    Rcpp::RObject rcpp_result_gen;\n    Rcpp::RNGScope rcpp_rngScope_gen;\n    Rcpp::traits::input_parameter< NumericVector& >::type cov_f(cov_fSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type non_zero_f(non_zero_fSEXP);\n    Rcpp::traits::input_parameter< const NumericMatrix& >::type degree(degreeSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type theta(thetaSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type f(fSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type z_j(z_jSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type normalized_const(normalized_constSEXP);\n    Rcpp::traits::input_parameter< const NumericVector& >::type m_t(m_tSEXP);\n    Rcpp::traits::input_parameter< const double >::type shape(shapeSEXP);\n    rcpp_result_gen = Rcpp::wrap(cal_var_f(cov_f, non_zero_f, degree, theta, f, z_j, normalized_const, m_t, shape));\n    return rcpp_result_gen;\nEND_RCPP\n}\n",
    "created" : 1484906231871.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1342621459",
    "id" : "EA3593D2",
    "lastKnownWriteTime" : 1484906214,
    "last_content_update" : 1484906214,
    "path" : "~/Dropbox/1- Program/PAFit/PAFit/src/RcppExports.cpp",
    "project_path" : "src/RcppExports.cpp",
    "properties" : {
    },
    "relative_order" : 10,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "cpp"
}